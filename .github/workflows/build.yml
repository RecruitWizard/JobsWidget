name: Build & Test

on:
  push:
    branches:    
      - '**' # matches every branch
    paths: 
          - "**"    
          - "!.octopus/**"      
  workflow_dispatch:      

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: '5.x'
        
    - name: Display GitVersion config
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml
        additionalArguments: "/updateprojectfiles"
        
    - name: Display GitVersion outputs
      run: |
        echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
     
    - name: Build the Docker Image 
      working-directory: src
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_SERVER_URL }}/jobs-widget:${{ steps.gitversion.outputs.fullSemVer }} 
       
    - name: Login to Azure Container Registry 
      uses: docker/login-action@v1  
      with: 
        registry: ${{ secrets.DOCKER_SERVER_URL }}  
        username: ${{ secrets.DOCKER_USERNAME }}  
        password: ${{ secrets.DOCKER_PASSWORD }}  
         
    - name: Push Docker Image to Azure Container Registry 
      run: docker push ${{ secrets.DOCKER_SERVER_URL }}/jobs-widget:${{ steps.gitversion.outputs.fullSemVer }} 
       
    - name: Generate Octopus Deploy build information 
      uses: xo-energy/action-octopus-build-information@v1.3.14
      with: 
        octopus_api_key: ${{ secrets.OCTOPUS_API_KEY }} 
        octopus_server: ${{ secrets.OCTOPUS_SERVER_URL }} 
        octopus_project: jobs-widget 
        output_path: octopus 
        push_package_ids: jobs-widget 
        push_overwrite_mode: OverwriteExisting 
        push_version: ${{ steps.gitversion.outputs.fullSemVer }} 
                
    - name: Install Octopus CLI üêô
      uses: OctopusDeploy/install-octopus-cli-action@v1
      with:
        version: latest      

    - name: Create a release in Octopus Deploy
      uses: OctopusDeploy/create-release-action@v1
      with:
        server: ${{ secrets.OCTOPUS_SERVER_URL }}          
        api_key: ${{ secrets.OCTOPUS_API_KEY }}
        project: 'Projects-881'
        package_version: ${{ steps.gitversion.outputs.fullSemVer }}
        git_ref: ${{ github.ref }} 
        
    - name: Tag Release in GitHub
      uses: avakar/tag-and-release@v1
      if: github.ref == 'refs/heads/main'
      with:
        tag_name: ${{ steps.gitversion.outputs.fullSemVer }}
      env:
        GITHUB_TOKEN: ${{ secrets.WizardsoftGitHubToken }}          
        
